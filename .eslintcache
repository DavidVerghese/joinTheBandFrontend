[{"/Users/joeverghese/2023/joinTheBand/joinTheBand/src/index.js":"1","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/App.js":"2","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/reportWebVitals.js":"3","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/Home.jsx":"4","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/AllProfiles.jsx":"5","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/Signup.jsx":"6","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/Header.jsx":"7","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/Login.jsx":"8","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/NoMatch/NoMatch.jsx":"9","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/EditProfile.jsx":"10","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/NoAuthorization/NoAuthorization.jsx":"11"},{"size":563,"mtime":1673200878451,"results":"12","hashOfConfig":"13"},{"size":4306,"mtime":1673321566779,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1673197364031,"results":"15","hashOfConfig":"13"},{"size":1059,"mtime":1673310388324,"results":"16","hashOfConfig":"13"},{"size":7851,"mtime":1673320535543,"results":"17","hashOfConfig":"13"},{"size":7995,"mtime":1673308639560,"results":"18","hashOfConfig":"13"},{"size":1922,"mtime":1673310087685,"results":"19","hashOfConfig":"13"},{"size":2626,"mtime":1673321075889,"results":"20","hashOfConfig":"13"},{"size":696,"mtime":1673320894971,"results":"21","hashOfConfig":"13"},{"size":4574,"mtime":1673309005405,"results":"22","hashOfConfig":"13"},{"size":758,"mtime":1673321597404,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1mc4r47",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":2,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/joeverghese/2023/joinTheBand/joinTheBand/src/index.js",[],["52","53"],"/Users/joeverghese/2023/joinTheBand/joinTheBand/src/App.js",["54"],"/Users/joeverghese/2023/joinTheBand/joinTheBand/src/reportWebVitals.js",[],"/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/Home.jsx",["55","56","57"],"import vinyl from \"./pictures/vinyl.png\";\nimport turntable_arm from \"./pictures/turntable_arm.png\";\nimport turntable from \"./pictures/turntable.png\"\nimport Button from 'react-bootstrap/Button';\nimport { Link } from \"react-router-dom\";\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\n\nfunction Home({user}) {\n  \n  \n  return (\n    <div className=\"home\">\n      \n      <h2>Join The Band</h2>\n      <em>find musicians in your area</em>\n\n      <ButtonGroup style={{ display: 'block' }}>\n        {!user ? <>\n          <Link to=\"/login\"><Button style={{ margin: '10px'}}>Log in</Button></Link>\n        <Link to=\"/signup\"><Button style={{ margin: '10px'}}>Sign up</Button></Link>\n        </> : <Link to=\"/profiles\"><Button style={{ margin: '10px'}}>See profiles</Button></Link>}\n        \n        \n      </ButtonGroup>\n      <div id=\"turntable-container\">\n        <img id=\"turntable-arm\" src={turntable_arm} />\n        <img id=\"turntable\" src={turntable} />\n        <img id=\"spin\" src={vinyl} />\n      </div>\n      \n     \n    </div>\n  );\n}\n\nexport default Home;\n","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/AllProfiles.jsx",["58","59","60","61","62","63","64","65","66","67","68"],"import Card from 'react-bootstrap/Card';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\n\nimport { useState, useEffect } from 'react';\nfunction AllProfiles({user,users,genres,instruments,locations}) {\n\n  const [loggedIn, setLoggedIn] = useState(false);\n \n\n  const [displayedUsers, setDisplayedUsers] = useState([]);\n  useEffect(() => {\n    const usersWithMatchInfo = users.map((otherUser) => ({ ...otherUser, match: user.looking_for.name ===  otherUser.instrument_name}))\n    const putMatchUsersFirst = usersWithMatchInfo.\n      filter((user) => user.match == true)\n      .concat(\n        usersWithMatchInfo.\n          filter((user) => user.match == false))\n      \n    setDisplayedUsers(putMatchUsersFirst)\n  }, [users]);\n\n  function filterUsersByGenre(genre) {\n    const filterResults =  users.filter((user) => user.genre_name === genre);\n    if (genre === 'All genres') {\n      setDescribeDisplayedUsers(`all users`)\n      return users;\n    }\n    else if (filterResults.length == 0){\n      alert(`no users found with the genre \"${genre}\"`);\n      setDescribeDisplayedUsers(`all users`);\n      return users;\n    }\n    else {\n      setDescribeDisplayedUsers(`users whose genre is \"${genre}\"`)\n      return filterResults;\n    }\n  }\n  function filterUsersByInstrument(instrument) {\n\n    const filterResults = users.filter((user) => user.instrument_name === instrument);\n    if (instrument === 'All instruments') {\n      setDescribeDisplayedUsers(`all users`)\n      return users;\n    }\n    else if (filterResults.length == 0){\n      alert(`no users found with the instrument \"${instrument}\"`);\n      setDescribeDisplayedUsers(`all users`);\n      return users;\n    }\n    else {\n      setDescribeDisplayedUsers(`users whose instrument is \"${instrument}\"`)\n      return filterResults;\n    }\n  }\n  function filterUsersByLocation(location) {\n    const filterResults = users.filter((user) => user.location_name === location);\n    if (location === 'All locations') {\n      setDescribeDisplayedUsers(`all users`)\n      return users;\n    }\n    else if (filterResults.length == 0){\n      alert(`no users found with location \"${location}\"`);\n      setDescribeDisplayedUsers(`all users`);\n      return users;\n    }\n    else {\n      setDescribeDisplayedUsers(`users whose location is \"${location}\"`)\n      return filterResults;\n    }\n  }\n  function alterDate(UTCString) {\n    return Date(UTCString).split(' ').slice(0,3).join(' ')\n  }\n  const genresPlusAllGenres = [{ name: \"All genres\" }, ...genres]\n  const instrumentsPlusAllInstruments = [{ name: \"All instruments\" }, ...instruments]\n  const locationsPlusAllLocations = [{ name: \"All locations\" }, ...locations]\n  \n  const [searchTerm,setSearchTerm] = useState('')\n\n  function handleSearch() {\n    const searchResults = users.filter((user) => user.name.includes(searchTerm));\n\n    if (searchResults.length == 0) {\n      alert(`there are no users named \"${searchTerm}\" or whose name contains \"${searchTerm}\"`)\n    }\n    else {\n      setDisplayedUsers(searchResults)\n      setDescribeDisplayedUsers(`users named \"${searchTerm}\" or whose name contains \"${searchTerm}\"`)\n    }\n  }\n  const [describeDisplayedUsers, setDescribeDisplayedUsers] = useState('all users');\n\n  return (\n    <div className=\"profiles-parent\">\n        <h2>Users:</h2>\n        \n  \n      <ButtonGroup style={{ width: '100%', display: 'flex', justifyContent:'space-between' }} className=\"mb-2\">\n        <InputGroup style={{ maxWidth: '50%', marginLeft:'50px' }} className=\"mb-3\">\n        <Form.Control\n            placeholder=\"search for users by name\"\n            value={searchTerm}\n            onChange={(e) => {  setSearchTerm(e.target.value) }}\n          aria-label=\"search for users\"\n          aria-describedby=\"basic-addon2\"\n        />\n          <Button  onClick={handleSearch} variant=\"outline-secondary\" id=\"button-addon2\">\n          Submit\n        </Button>\n        </InputGroup>\n        <Button variant=\"secondary\" onClick={() => { setDisplayedUsers(users); setDescribeDisplayedUsers(`all users`) }} style={{maxWidth: '20%',marginRight: '50px',padding: '5px'}} >See all users</Button>\n        </ButtonGroup>\n\n      <ButtonGroup style={{ width: '100%', display: 'flex', justifyContent:'space-around' }}  className=\"mb-2\">\n\n     <div>\n        <Dropdown>\n      <Dropdown.Toggle>\n        Filter by Instrument\n      </Dropdown.Toggle>\n\n          \n        <Dropdown.Menu>\n          {instrumentsPlusAllInstruments.map((instrument) => <Dropdown.Item onClick={()=>setDisplayedUsers(filterUsersByInstrument(instrument.name))}>{instrument.name}</Dropdown.Item>)}\n          </Dropdown.Menu>\n    \n        </Dropdown>\n       </div>\n\n        <Dropdown>\n      <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n        Filter by Genre\n      </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          {genresPlusAllGenres.map((genre) => <Dropdown.Item onClick={()=>setDisplayedUsers(filterUsersByGenre(genre.name))}>{genre.name}</Dropdown.Item>)}\n      </Dropdown.Menu>\n      </Dropdown>\n\n      <Dropdown>\n      <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n        Filter by Location\n      </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          {locationsPlusAllLocations.map((location) => <Dropdown.Item onClick={()=>setDisplayedUsers(filterUsersByLocation(location.name))}>{location.name}</Dropdown.Item>)}\n      </Dropdown.Menu>\n        </Dropdown>\n        </ButtonGroup>\n      <p>Currently displaying {describeDisplayedUsers}</p>\n      {user ? <div className=\"profiles\">\n  \n        {displayedUsers && displayedUsers.length > 0 ? displayedUsers.map((item, key) => {\n        \n          //  item stores data of musician's profile\n          return (\n     \n            <Card style={{ width: '18rem', backgroundColor: 'black', boxShadow: '1px 1px 1px 1px white', margin: '10px', textAlign: 'center' }}>\n              <Card.Body>\n              {item.match ? <Card.Header style={{backgroundColor:'darkred'}} as=\"h5\">{`Match: this user's instrument is '${user.looking_for.name}'`}</Card.Header> : null}\n                <Card.Header>\n                  <Card.Title>{item.name}</Card.Title>\n                  <Card.Subtitle className=\"mb-2 text-muted\">{item.instrument_name}</Card.Subtitle>\n                </Card.Header>\n\n                <Card.Text>\n                  \n                </Card.Text>\n                <Card.Img style={{ width: '5rem' }} variant=\"top\" src={item.picture_url} />\n\n               \n                \n                <Card.Text>\n                  email: {item.email_address}\n                </Card.Text>\n                <Card.Text>\n                  genre: {item.genre_name}\n                </Card.Text>\n                <Card.Text>\n                  <p>joined: {alterDate(item.created_at)}</p>\n                </Card.Text>\n                <Card.Text>\n                  <p>location: {item.location_name}</p>\n                </Card.Text>\n                <Card.Text>\n                  <p>instrument: {item.instrument_name}</p>\n                </Card.Text>\n                <Card.Text>\n                  <p>looking for: {item.looking_for ? item.looking_for.name : null}</p>\n                </Card.Text>\n\n                {/* <Button variant=\"primary\">Chat</Button>\n                <Button variant=\"primary\">Book appointment</Button> */}\n              </Card.Body>\n            </Card>\n          );\n        }) : <>\n          <h2>Loading</h2>\n          <Spinner animation=\"border\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </Spinner>\n        </>}\n\n      </div> : <h2>Log in to see user profiles</h2>}\n      </div>\n  );\n}\n\nexport default AllProfiles;\n","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/Signup.jsx",[],"/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/Header.jsx",["69","70","71","72"],"import Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faHandsHolding,  } from '@fortawesome/free-solid-svg-icons'\n\nfunction Header({ user, setUser }) {\n  const [loggedIn, setLoggedIn] = useState(false);\n  let history = useHistory();\n  const handleLogout = e => {\n\n    e.preventDefault();\n\n    fetch(`/logout`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      }\n     \n    }).then(resp => {\n      if (resp.ok) {\n        resp.json().then(data => {\n          setUser(null);\n        })\n      }\n    })\n  }  \n\n  useEffect(() => {\n    if (user) {\n      setLoggedIn(true)\n    }\n    else {\n      setLoggedIn(false);\n    }\n  }, [user])\n  \n\n  return (<Navbar style={{ color: \"white\" }} expand=\"lg\">\n    <Container>\n      <Link to = \"/\"> <Navbar.Brand style={{ color: \"white\" }} href=\"\">Join The Band</Navbar.Brand></Link>\n   \n      {!loggedIn ?\n        <>\n          <Link to=\"/login\"> <Navbar.Brand style={{ color: \"white\" }} href=\"login\">Log In</Navbar.Brand></Link>\n          <Link to=\"/signup\"> <Navbar.Brand style={{ color: \"white\" }} href=\"signup\">Sign Up</Navbar.Brand></Link>\n        </> : <> \n          <Link to=\"/\"> <Navbar.Brand onClick={handleLogout} style={{ color: \"white\" }} href=\"signup\">Log out</Navbar.Brand></Link>\n          <Navbar.Brand style={{ color: \"white\" }}><Link to=\"/edit-profile\">Edit Profile</Link></Navbar.Brand>\n          <Link to=\"/profiles\"> <Navbar.Brand style={{ color: \"white\" }}>Profiles</Navbar.Brand></Link>\n            </>\n      }\n       \n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n  </Container>\n</Navbar>)\n}\nexport default Header;","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/Login.jsx",["73","74"],"import { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useHistory, Link } from \"react-router-dom\";\nimport Cookies from 'universal-cookie';\n\nfunction Login({baseURL,user,setUser }) {\n\n  const cookies = new Cookies();\n  let history = useHistory();\n\n  const [currentUser, setCurrentUser] = useState({ name: 'no user' })\n  const [newUser, setNewUser] = useState({\n    username: \"\",\n    password: \"\",\n    email_address: \"\", \n    picture_url: \"\",\n    genre: \"\",                                            \n    instrument: \"\",                                        \n    location: \"\", \n    looking_for: \"\"\n  });\n  const [loginErrors, setLoginErrors] = useState([]);\n \n  const [toggle,setToggle] = useState(false)\n\n  \n\n  const handleSubmitLogin = e => {\n\n    e.preventDefault();\n\n    fetch(`/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({name:newUser.username,password: newUser.password}),\n     \n    }).then(resp => {\n      if(resp.ok){\n        resp.json().then(data => {\n\n          setLoginErrors([])\n          console.log(data); \n          setCurrentUser(data);\n          setToggle(!toggle)\n   \n    \n          // cookies.set('user_idd', 's', { path: '/' });\n          setUser(data);\n          history.push(\"/profiles\");\n          // setUser(data);\n            // handleCurrentUser(data)\n            // navigate('/')\n         })\n      }else {\n         resp.json().then(json => setLoginErrors(json.errors))\n      }\n   })\n\n  }  \n\n\n  \n\n  const handleChange = e => {\n    setNewUser({\n      ...newUser,\n      [e.target.name]: e.target.value\n    })\n  }\n\n\n  return <div className=\"login-or-signup\">\n    \n\n    <Form  onSubmit={handleSubmitLogin}>\n      <h2>Log in</h2>\n      <Link to=\"/signup\">Sign up if you do not have an account</Link>\n      {loginErrors.map((loginError) => <><em>{loginError}</em><br></br></>)}\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Username</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Enter your username\" name=\"username\" value={newUser.username} onChange={handleChange}/>\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Password\"  name=\"password\"  value={newUser.password} onChange={ handleChange } />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n    </Form>\n  \n    \n    \n  </div>\n}\nexport default Login;","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/NoMatch/NoMatch.jsx",[],"/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/EditProfile.jsx",["75","76"],"import Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useState } from 'react';\nimport { Redirect, useHistory } from \"react-router-dom\";\n\nfunction EditProfile({ user, setUser, genres, setGenres,instruments,setInstruments,locations,setLocations, users,setUsers }) {\n  const [editUser, setEditUser] = useState({...user,looking_for: user.looking_for.name});\n  const [editErrors,setEditErrors] = useState([])\n  const handleChange = e => {\n    setEditUser({\n      ...editUser,\n      [e.target.name]: e.target.value\n    })\n  }\n  let history = useHistory();\n  function handleEdit(e) {\n    e.preventDefault();\n    console.log(editUser);\n\n    fetch(`/users/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: editUser.name,\n        email_address: editUser.email_address, \n        picture_url: editUser.picture_url,\n        genre: editUser.genre_name,                                            \n        instrument: editUser.instrument_name,                                        \n        location: editUser.location_name, \n        looking_for: editUser.looking_for\n      }),\n     \n    }).then(resp => {\n     if (resp.ok) {\n       \n       resp.json().then(data => {\n         \n         setUser(data);\n        //  if (!genres.includes(data.genre)) {\n        //   setGenres([...genres,data.genre])\n        //  }\n         \n\n        //  if (!instruments.includes(data.instrument)) {\n        //   setInstruments([...instruments,data.instrument])\n        //  }\n\n        //  if (!instruments.includes(data.looking_for)) {\n        //   setInstruments([...instruments,data.looking_for])\n        //  }\n         \n        // if (!locations.includes(data.location)) {\n        //   setLocations([...locations,data.location])\n        // }\n         setUsers(users.map((user) => user.id == data.id ? data : user ));\n         history.push(\"/profiles\");\n          \n         })\n      }else {\n         resp.json().then(json => setEditErrors(json.errors))\n      }\n   })\n\n  }\n  \n  function handleDelete(e) {\n    e.preventDefault();\n  \n\n    fetch(`/users/${user.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n     \n    }).then(resp => {\n       \n         \n          setUser(null);\n          \n        })\n\n  }\n\n    return <div>\n  <Form onSubmit={handleEdit}>\n        <h2>My Profile</h2>\n       \n        {editErrors.map((error) => <p>{error}</p>)}\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Username</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Enter your username\" name=\"name\" value={editUser.name} onChange={handleChange}/>\n      </Form.Group>\n\n      \n\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Email Address</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Enter your email address\" name=\"email_address\" value={editUser.email_address} onChange={handleChange}/>\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Picture URL</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Enter your picture url\" name=\"picture_url\" value={editUser.picture_url} onChange={handleChange}/>\n      </Form.Group>\n\n      {/* <Form.Group className=\"mb-3\">\n        <Form.Label>Genre</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Enter your genre\" name=\"genre_name\" value={editUser.genre_name} onChange={handleChange}/>\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Instrument</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Enter your instrument\" name=\"instrument_name\" value={editUser.instrument_name} onChange={handleChange}/>\n      </Form.Group>\n\n\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Location</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Enter your location\" name=\"location_name\" value={editUser.location_name} onChange={handleChange}/>\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Looking For</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Enter what instrument you are looking for\" name=\"looking_for\" value={editUser.looking_for} onChange={handleChange}/>\n      </Form.Group> */}\n\n     \n      <Button variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n      </Form>\n      <Button onClick={handleDelete} variant=\"danger\" type=\"submit\">\n        Delete account\n      </Button>\n  </div> \n  }\n  \n \n\nexport default EditProfile;","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/NoAuthorization/NoAuthorization.jsx",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":3,"column":25,"nodeType":"83","messageId":"84","endLine":3,"endColumn":29},{"ruleId":"85","severity":1,"message":"86","line":26,"column":9,"nodeType":"87","endLine":26,"endColumn":55},{"ruleId":"85","severity":1,"message":"86","line":27,"column":9,"nodeType":"87","endLine":27,"endColumn":47},{"ruleId":"85","severity":1,"message":"86","line":28,"column":9,"nodeType":"87","endLine":28,"endColumn":38},{"ruleId":"81","severity":1,"message":"88","line":12,"column":10,"nodeType":"83","messageId":"84","endLine":12,"endColumn":18},{"ruleId":"81","severity":1,"message":"89","line":12,"column":20,"nodeType":"83","messageId":"84","endLine":12,"endColumn":31},{"ruleId":"90","severity":1,"message":"91","line":18,"column":50,"nodeType":"92","messageId":"93","endLine":18,"endColumn":51,"fix":"94"},{"ruleId":"95","severity":1,"message":"96","line":19,"column":35,"nodeType":"97","messageId":"98","endLine":19,"endColumn":37},{"ruleId":"90","severity":1,"message":"91","line":21,"column":27,"nodeType":"92","messageId":"93","endLine":21,"endColumn":28,"fix":"99"},{"ruleId":"95","severity":1,"message":"96","line":22,"column":39,"nodeType":"97","messageId":"98","endLine":22,"endColumn":41},{"ruleId":"100","severity":1,"message":"101","line":25,"column":6,"nodeType":"102","endLine":25,"endColumn":13,"suggestions":"103"},{"ruleId":"95","severity":1,"message":"96","line":33,"column":35,"nodeType":"97","messageId":"98","endLine":33,"endColumn":37},{"ruleId":"95","severity":1,"message":"96","line":50,"column":35,"nodeType":"97","messageId":"98","endLine":50,"endColumn":37},{"ruleId":"95","severity":1,"message":"96","line":66,"column":35,"nodeType":"97","messageId":"98","endLine":66,"endColumn":37},{"ruleId":"95","severity":1,"message":"96","line":88,"column":30,"nodeType":"97","messageId":"98","endLine":88,"endColumn":32},{"ruleId":"81","severity":1,"message":"104","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":11},{"ruleId":"81","severity":1,"message":"105","line":4,"column":16,"nodeType":"83","messageId":"84","endLine":4,"endColumn":24},{"ruleId":"81","severity":1,"message":"106","line":6,"column":10,"nodeType":"83","messageId":"84","endLine":6,"endColumn":25},{"ruleId":"81","severity":1,"message":"107","line":11,"column":7,"nodeType":"83","messageId":"84","endLine":11,"endColumn":14},{"ruleId":"81","severity":1,"message":"108","line":9,"column":9,"nodeType":"83","messageId":"84","endLine":9,"endColumn":16},{"ruleId":"81","severity":1,"message":"109","line":12,"column":10,"nodeType":"83","messageId":"84","endLine":12,"endColumn":21},{"ruleId":"81","severity":1,"message":"105","line":4,"column":10,"nodeType":"83","messageId":"84","endLine":4,"endColumn":18},{"ruleId":"95","severity":1,"message":"96","line":58,"column":47,"nodeType":"97","messageId":"98","endLine":58,"endColumn":49},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"112","text":"113"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"range":"114","text":"115"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.looking_for.name'. Either include it or remove the dependency array.","ArrayExpression",["116"],"'Nav' is defined but never used.","'Redirect' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'history' is assigned a value but never used.","'cookies' is assigned a value but never used.","'currentUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[763,771],"\n      .",[849,861],"\n          .",{"desc":"117","fix":"118"},"Update the dependencies array to be: [user.looking_for.name, users]",{"range":"119","text":"120"},[954,961],"[user.looking_for.name, users]"]