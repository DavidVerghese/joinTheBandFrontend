[{"/Users/joeverghese/2023/joinTheBand/joinTheBand/src/index.js":"1","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/App.js":"2","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/reportWebVitals.js":"3","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/Home.jsx":"4","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/AllProfiles.jsx":"5","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/Signup.jsx":"6","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/Header.jsx":"7","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/Login.jsx":"8","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/NoMatch/NoMatch.jsx":"9"},{"size":563,"mtime":1673200878451,"results":"10","hashOfConfig":"11"},{"size":3375,"mtime":1673295548453,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1673197364031,"results":"13","hashOfConfig":"11"},{"size":980,"mtime":1673281968465,"results":"14","hashOfConfig":"11"},{"size":7110,"mtime":1673281110572,"results":"15","hashOfConfig":"11"},{"size":7764,"mtime":1673280749357,"results":"16","hashOfConfig":"11"},{"size":1617,"mtime":1673281674965,"results":"17","hashOfConfig":"11"},{"size":2550,"mtime":1673281773628,"results":"18","hashOfConfig":"11"},{"size":672,"mtime":1673295621817,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1mc4r47",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/joeverghese/2023/joinTheBand/joinTheBand/src/index.js",[],["44","45"],"/Users/joeverghese/2023/joinTheBand/joinTheBand/src/App.js",["46","47"],"/Users/joeverghese/2023/joinTheBand/joinTheBand/src/reportWebVitals.js",[],"/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/Home.jsx",["48","49","50"],"import vinyl from \"./pictures/vinyl.png\";\nimport turntable_arm from \"./pictures/turntable_arm.png\";\nimport turntable from \"./pictures/turntable.png\"\nimport Button from 'react-bootstrap/Button';\nimport { Link } from \"react-router-dom\";\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\n\nfunction Home({user}) {\n  \n  \n  return (\n    <div className=\"home\">\n      \n      <h2>Join The Band</h2>\n      <em>find musicians in your area</em>\n\n      <ButtonGroup style={{ display: 'block' }}>\n        {!user ? <>\n          <Link to=\"/login\"><Button style={{ margin: '10px'}}>Log in</Button></Link>\n        <Link to=\"/signup\"><Button style={{ margin: '10px'}}>Sign up</Button></Link>\n        </> : null}\n        \n        \n      </ButtonGroup>\n      <div id=\"turntable-container\">\n        <img id=\"turntable-arm\" src={turntable_arm} />\n        <img id=\"turntable\" src={turntable} />\n        <img id=\"spin\" src={vinyl} />\n      </div>\n      \n     \n    </div>\n  );\n}\n\nexport default Home;\n","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/AllProfiles.jsx",["51","52","53","54"],"import Card from 'react-bootstrap/Card';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\n\nimport { useState, useEffect } from 'react';\nfunction AllProfiles({users,genres,instruments,locations}) {\n\n\n  const [displayedUsers, setDisplayedUsers] = useState([]);\n  useEffect(() => {\n    setDisplayedUsers(users)\n  },[users])\n  function filterUsersByGenre(genre) {\n    const filterResults =  users.filter((user) => user.genre_name === genre);\n    if (genre === 'All genres') {\n      setDescribeDisplayedUsers(`all users`)\n      return users;\n    }\n    else if (filterResults.length == 0){\n      alert(`no users found with the genre \"${genre}\"`);\n      setDescribeDisplayedUsers(`all users`);\n      return users;\n    }\n    else {\n      setDescribeDisplayedUsers(`users whose genre is \"${genre}\"`)\n      return filterResults;\n    }\n  }\n  function filterUsersByInstrument(instrument) {\n\n    const filterResults = users.filter((user) => user.instrument_name === instrument);\n    if (instrument === 'All instruments') {\n      setDescribeDisplayedUsers(`all users`)\n      return users;\n    }\n    else if (filterResults.length == 0){\n      alert(`no users found with the instrument \"${instrument}\"`);\n      setDescribeDisplayedUsers(`all users`);\n      return users;\n    }\n    else {\n      setDescribeDisplayedUsers(`users whose instrument is \"${instrument}\"`)\n      return filterResults;\n    }\n  }\n  function filterUsersByLocation(location) {\n    const filterResults = users.filter((user) => user.location_name === location);\n    if (location === 'All locations') {\n      setDescribeDisplayedUsers(`all users`)\n      return users;\n    }\n    else if (filterResults.length == 0){\n      alert(`no users found with location \"${location}\"`);\n      setDescribeDisplayedUsers(`all users`);\n      return users;\n    }\n    else {\n      setDescribeDisplayedUsers(`users whose location is \"${location}\"`)\n      return filterResults;\n    }\n  }\n  function alterDate(UTCString) {\n    return Date(UTCString).split(' ').slice(0,3).join(' ')\n  }\n  const genresPlusAllGenres = [{ name: \"All genres\" }, ...genres]\n  const instrumentsPlusAllInstruments = [{ name: \"All instruments\" }, ...instruments]\n  const locationsPlusAllLocations = [{ name: \"All locations\" }, ...locations]\n  \n  const [searchTerm,setSearchTerm] = useState('')\n\n  function handleSearch() {\n    const searchResults = users.filter((user) => user.name.includes(searchTerm));\n\n    if (searchResults.length == 0) {\n      alert(`there are no users named \"${searchTerm}\" or whose name contains \"${searchTerm}\"`)\n    }\n    else {\n      setDisplayedUsers(searchResults)\n      setDescribeDisplayedUsers(`users named \"${searchTerm}\" or whose name contains \"${searchTerm}\"`)\n    }\n  }\n  const [describeDisplayedUsers, setDescribeDisplayedUsers] = useState('all users');\n\n  return (\n    <div className=\"profiles-parent\">\n        <h2>Users:</h2>\n        \n  \n      <ButtonGroup style={{ width: '100%', display: 'flex', justifyContent:'space-between' }} className=\"mb-2\">\n        <InputGroup style={{ maxWidth: '50%', marginLeft:'50px' }} className=\"mb-3\">\n        <Form.Control\n            placeholder=\"search for users by name\"\n            value={searchTerm}\n            onChange={(e) => {  setSearchTerm(e.target.value) }}\n          aria-label=\"search for users\"\n          aria-describedby=\"basic-addon2\"\n        />\n          <Button  onClick={handleSearch} variant=\"outline-secondary\" id=\"button-addon2\">\n          Submit\n        </Button>\n        </InputGroup>\n        <Button variant=\"secondary\" onClick={() => { setDisplayedUsers(users); setDescribeDisplayedUsers(`all users`) }} style={{maxWidth: '20%',marginRight: '50px',padding: '5px'}} >See all users</Button>\n        </ButtonGroup>\n\n      <ButtonGroup style={{ width: '100%', display: 'flex', justifyContent:'space-around' }}  className=\"mb-2\">\n\n     <div>\n        <Dropdown>\n      <Dropdown.Toggle>\n        Filter by Instrument\n      </Dropdown.Toggle>\n\n          \n        <Dropdown.Menu>\n          {instrumentsPlusAllInstruments.map((instrument) => <Dropdown.Item onClick={()=>setDisplayedUsers(filterUsersByInstrument(instrument.name))}>{instrument.name}</Dropdown.Item>)}\n          </Dropdown.Menu>\n    \n        </Dropdown>\n       </div>\n\n        <Dropdown>\n      <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n        Filter by Genre\n      </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          {genresPlusAllGenres.map((genre) => <Dropdown.Item onClick={()=>setDisplayedUsers(filterUsersByGenre(genre.name))}>{genre.name}</Dropdown.Item>)}\n      </Dropdown.Menu>\n      </Dropdown>\n\n      <Dropdown>\n      <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n        Filter by Location\n      </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          {locationsPlusAllLocations.map((location) => <Dropdown.Item onClick={()=>setDisplayedUsers(filterUsersByLocation(location.name))}>{location.name}</Dropdown.Item>)}\n      </Dropdown.Menu>\n        </Dropdown>\n        </ButtonGroup>\n      <p>Currently displaying {describeDisplayedUsers}</p>\n    <div className=\"profiles\">\n  \n        {displayedUsers && displayedUsers.length > 0 ? displayedUsers.map((item, key) => {\n        \n        //  item stores data of musician's profile\n          return (\n     \n             <Card style={{ width: '18rem', backgroundColor: 'black',boxShadow: '1px 1px 1px 1px white', margin: '10px', textAlign: 'center' }}>\n            <Card.Body>\n                <Card.Header>\n                  <Card.Title>{item.name}</Card.Title>\n                  <Card.Subtitle className=\"mb-2 text-muted\">{item.instrument_name}</Card.Subtitle>\n                </Card.Header>\n\n                 <Card.Img style={{ width: '5rem'}} variant=\"top\" src={item.picture_url}  />\n\n               \n                \n                 <Card.Text>\n                   email: {item.email_address}\n                 </Card.Text>\n                <Card.Text>\n                 genre: {item.genre_name}\n                 </Card.Text>\n                 <Card.Text>\n                 <p>joined: {alterDate(item.created_at)}</p>\n                 </Card.Text>\n                <Card.Text>\n               <p>location: {item.location_name}</p>\n               </Card.Text>\n               <Card.Text>\n                <p>instrument: {item.instrument_name}</p>\n               </Card.Text>\n                <Card.Text>\n                 <p>looking for: {item.looking_for}</p>\n                </Card.Text> \n\n                <Button variant=\"primary\">Chat</Button>\n                <Button variant=\"primary\">Book appointment</Button>\n             </Card.Body>\n            </Card>\n        );\n        }) : <>\n            <h2>Loading</h2>\n            <Spinner animation=\"border\" role=\"status\">\n              <span className=\"visually-hidden\">Loading...</span>\n            </Spinner>\n        </>}\n\n      </div>\n      </div>\n  );\n}\n\nexport default AllProfiles;\n","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/Signup.jsx",["55"],"import { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useHistory } from \"react-router-dom\";\nimport Cookies from 'universal-cookie';\n\nfunction Signup({baseURL,genres,setGenres,instruments,setInstruments,locations,setLocations, users,setUsers}) {\n  let history = useHistory();\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\",\n    email_address: \"\", \n    picture_url: \"\",\n    genre: \"\",                                            \n    instrument: \"\",                                        \n    location: \"\", \n    looking_for: \"\"\n  });\n  const cookies = new Cookies();\n  \n  const [signupErrors, setSignupErrors] = useState([]);\n\n  const handleSubmitSignUp = e => {\n\n    debugger;\n    e.preventDefault();\n\n    console.log(user);\n    fetch(`/signup`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: user.username,\n        password: user.password,\n        email_address: user.email_address, \n        picture_url: user.picture_url,\n        genre: user.genre,                                            \n        instrument: user.instrument,                                        \n        location: user.location, \n        looking_for: user.looking_for\n      }),\n     \n    }).then(resp => {\n      if (resp.ok) {\n        debugger;\n        resp.json().then(data => {\n          setSignupErrors([])\n          if (!genres.includes(data.genre)) {\n            setGenres([...genres,data.genre])\n          }\n          if (!instruments.includes(data.instrument)) {\n            setInstruments([...genres,data.instrument])\n          }\n          if (!locations.includes(data.location)) {\n            setLocations([...locations,data.location])\n          }\n          setUsers([...users, data]);\n          history.push(\"/profiles\");\n          \n         })\n      }else {\n         resp.json().then(json => setSignupErrors(json.errors))\n      }\n   })\n\n  } \n\n  const handleChange = e => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const [displayGenreInput, setDisplayGenreInput] = useState(false);\n  const [displayInstrumentInput, setDisplayInstrumentInput] = useState(false)\n  const [displayLocationInput, setDisplayLocationInput] = useState(false)\n  const [displayLookingForInput,setDisplayLookingForInput] = useState(false)\n\n\n\n\n  return <div className=\"login-or-signup\">\n\n<Form  onSubmit={handleSubmitSignUp}>\n      <h2>Sign Up</h2>\n      {signupErrors.map((signupError) => <><em>{signupError}</em><br></br></>)}\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Username</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Enter your username\" name=\"username\" value={user.username} onChange={handleChange}/>\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Password\"  name=\"password\"  value={user.password} onChange={ handleChange } />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Email Address</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Enter your email address\" name=\"email_address\" value={user.email_address} onChange={handleChange}/>\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Picture URL</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Enter your picture url\" name=\"picture_url\" value={user.picture_url} onChange={handleChange}/>\n      </Form.Group>\n\n\n      {!displayGenreInput ?\n         <Form.Group className=\"mb-3\">\n         <Form.Label>Genre</Form.Label>\n          <Form.Select onChange={(e) => { if (e.target.value === 'Other') { setDisplayGenreInput(true) } else {setUser({...user,genre:e.target.value})} }}>\n          <option value=\"\" disabled selected>Select your genre</option>\n          {genres.map((genre) => <option value={genre.name}>{genre.name}</option>)}\n          <option>Other</option>\n          </Form.Select>\n          <Form.Text className=\"text-muted\">\n          If you do not see your genre, select 'Other'\n        </Form.Text>\n        </Form.Group> : null}\n      {displayGenreInput ? <Form.Group className=\"mb-3\">\n        <Form.Label>Genre</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Enter your genre\" name=\"genre\" value={user.genre} onChange={handleChange}/>\n      </Form.Group> : null}\n\n      {!displayInstrumentInput ?\n         <Form.Group className=\"mb-3\">\n         <Form.Label>Instrument</Form.Label>\n          <Form.Select onChange={(e) => { if (e.target.value === 'Other') { setDisplayInstrumentInput(true) } else {setUser({...user,instrument:e.target.value})} }}>\n          <option value=\"\" disabled selected>Select your instrument</option>\n          {instruments.map((instrument) => <option value={instrument.name}>{instrument.name}</option>)}\n          <option>Other</option>\n          </Form.Select>\n          <Form.Text className=\"text-muted\">\n          If you do not see your instrument, select 'Other'\n        </Form.Text>\n        </Form.Group> : null}\n      {displayInstrumentInput ? <Form.Group className=\"mb-3\">\n        <Form.Label>Instrument</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Enter your instrument\" name=\"instrument\" value={user.instrument} onChange={handleChange} />\n        <Form.Text className=\"text-muted\">\n          Enter in your instrument\n        </Form.Text>\n      </Form.Group> : null}\n\n      {!displayLocationInput ?\n         <Form.Group className=\"mb-3\">\n         <Form.Label>Location</Form.Label>\n          <Form.Select onChange={(e) => { if (e.target.value === 'Other') { setDisplayLocationInput(true) } else {setUser({...user,location:e.target.value})} }}>\n          <option value=\"\" disabled selected>Select your location</option>\n          {locations.map((location) => <option value={location.name}>{location.name}</option>)}\n          <option>Other</option>\n          </Form.Select>\n          <Form.Text className=\"text-muted\">\n          If you do not see your location, select 'Other'\n        </Form.Text>\n        </Form.Group> : null}\n      {displayLocationInput ? <Form.Group className=\"mb-3\">\n        <Form.Label>Location</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Enter your location\" name=\"location\" value={user.location} onChange={handleChange}/>\n      </Form.Group> : null}\n\n      {!displayLookingForInput ?\n         <Form.Group className=\"mb-3\">\n         <Form.Label>Looking For</Form.Label>\n          <Form.Select onChange={(e) => { if (e.target.value === 'Other') { setDisplayLookingForInput(true) } else {setUser({...user,looking_for:e.target.value})} }}>\n          <option value=\"\" disabled selected>Select the instrument you want to collaborate with</option>\n          {instruments.map((instrument) => <option value={instrument.name}>{instrument.name}</option>)}\n          <option>Other</option>\n          </Form.Select>\n          <Form.Text className=\"text-muted\">\n          If you do not see the instrument you want to collaborate with, select 'Other'\n        </Form.Text>\n        </Form.Group> : null}\n      {displayLookingForInput ? <Form.Group className=\"mb-3\">\n        <Form.Label>Looking For</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Enter the instrument you are looking for\" name=\"looking_for\" value={user.looking_for} onChange={handleChange} />\n        <Form.Text className=\"text-muted\">\n         Enter the instrument you want to collaborate with\n        </Form.Text>\n      </Form.Group> : null}\n\n\n      <Button variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n    </Form>\n  </div>\n}\nexport default Signup;","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/Header.jsx",["56","57"],"import Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { Link } from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport Cookies from 'universal-cookie';\n\nfunction Header({ user, setUser }) {\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const handleLogout = e => {\n\n    e.preventDefault();\n\n    fetch(`/logout`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      }\n     \n    }).then(resp => {\n      if (resp.ok) {\n        resp.json().then(data => {\n          setUser(null);\n        })\n      }\n    })\n  }  \n\n  useEffect(() => {\n    if (user) {\n      setLoggedIn(true)\n    }\n    else {\n      setLoggedIn(false);\n    }\n  },[user])\n  return (<Navbar style={{ color: \"white\" }} expand=\"lg\">\n    <Container>\n      <Link to = \"/\"> <Navbar.Brand style={{ color: \"white\" }} href=\"\">Join The Band</Navbar.Brand></Link>\n   \n      {!loggedIn ?\n        <>\n          <Link to=\"/login\"> <Navbar.Brand style={{ color: \"white\" }} href=\"login\">Log In</Navbar.Brand></Link>\n          <Link to=\"/signup\"> <Navbar.Brand style={{ color: \"white\" }} href=\"signup\">Sign Up</Navbar.Brand></Link>\n        </> : <Link to=\"/\"> <Navbar.Brand onClick={handleLogout} style={{ color: \"white\" }} href=\"signup\">Log out</Navbar.Brand></Link>\n      }\n       <Link to=\"/profiles\"> <Navbar.Brand style={{ color: \"white\" }}>Profiles</Navbar.Brand></Link>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n  </Container>\n</Navbar>)\n}\nexport default Header;","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/Login.jsx",["58","59"],"import { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useHistory } from \"react-router-dom\";\nimport Cookies from 'universal-cookie';\n\nfunction Login({baseURL,user,setUser }) {\n\n  const cookies = new Cookies();\n  let history = useHistory();\n\n  const [currentUser, setCurrentUser] = useState({ name: 'no user' })\n  const [newUser, setNewUser] = useState({\n    username: \"\",\n    password: \"\",\n    email_address: \"\", \n    picture_url: \"\",\n    genre: \"\",                                            \n    instrument: \"\",                                        \n    location: \"\", \n    looking_for: \"\"\n  });\n  const [loginErrors, setLoginErrors] = useState([]);\n \n  const [toggle,setToggle] = useState(false)\n\n  \n\n  const handleSubmitLogin = e => {\n\n    e.preventDefault();\n\n    fetch(`/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({name:newUser.username,password: newUser.password}),\n     \n    }).then(resp => {\n      if(resp.ok){\n        resp.json().then(data => {\n\n          setLoginErrors([])\n          console.log(data); \n          setCurrentUser(data);\n          setToggle(!toggle)\n   \n    \n          // cookies.set('user_idd', 's', { path: '/' });\n          setUser(data);\n          history.push(\"/profiles\");\n          // setUser(data);\n            // handleCurrentUser(data)\n            // navigate('/')\n         })\n      }else {\n         resp.json().then(json => setLoginErrors(json.errors))\n      }\n   })\n\n  }  \n\n\n  \n\n  const handleChange = e => {\n    setNewUser({\n      ...newUser,\n      [e.target.name]: e.target.value\n    })\n  }\n\n\n  return <div className=\"login-or-signup\">\n    \n\n    <Form  onSubmit={handleSubmitLogin}>\n      <h2>Log in</h2>\n      {loginErrors.map((loginError) => <><em>{loginError}</em><br></br></>)}\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Username</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Enter your username\" name=\"username\" value={newUser.username} onChange={handleChange}/>\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Password\"  name=\"password\"  value={newUser.password} onChange={ handleChange } />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n    </Form>\n  \n    \n    \n  </div>\n}\nexport default Login;","/Users/joeverghese/2023/joinTheBand/joinTheBand/src/components/NoMatch/NoMatch.jsx",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":3,"column":25,"nodeType":"66","messageId":"67","endLine":3,"endColumn":29},{"ruleId":"68","severity":1,"message":"69","line":35,"column":6,"nodeType":"70","endLine":35,"endColumn":8,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":26,"column":9,"nodeType":"74","endLine":26,"endColumn":55},{"ruleId":"72","severity":1,"message":"73","line":27,"column":9,"nodeType":"74","endLine":27,"endColumn":47},{"ruleId":"72","severity":1,"message":"73","line":28,"column":9,"nodeType":"74","endLine":28,"endColumn":38},{"ruleId":"75","severity":1,"message":"76","line":23,"column":35,"nodeType":"77","messageId":"78","endLine":23,"endColumn":37},{"ruleId":"75","severity":1,"message":"76","line":40,"column":35,"nodeType":"77","messageId":"78","endLine":40,"endColumn":37},{"ruleId":"75","severity":1,"message":"76","line":56,"column":35,"nodeType":"77","messageId":"78","endLine":56,"endColumn":37},{"ruleId":"75","severity":1,"message":"76","line":78,"column":30,"nodeType":"77","messageId":"78","endLine":78,"endColumn":32},{"ruleId":"64","severity":1,"message":"79","line":19,"column":9,"nodeType":"66","messageId":"67","endLine":19,"endColumn":16},{"ruleId":"64","severity":1,"message":"80","line":2,"column":8,"nodeType":"66","messageId":"67","endLine":2,"endColumn":11},{"ruleId":"64","severity":1,"message":"81","line":6,"column":8,"nodeType":"66","messageId":"67","endLine":6,"endColumn":15},{"ruleId":"64","severity":1,"message":"79","line":9,"column":9,"nodeType":"66","messageId":"67","endLine":9,"endColumn":16},{"ruleId":"64","severity":1,"message":"82","line":12,"column":10,"nodeType":"66","messageId":"67","endLine":12,"endColumn":21},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cookies'. Either include it or remove the dependency array.","ArrayExpression",["85"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'cookies' is assigned a value but never used.","'Nav' is defined but never used.","'Cookies' is defined but never used.","'currentUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},"Update the dependencies array to be: [cookies]",{"range":"88","text":"89"},[1134,1136],"[cookies]"]