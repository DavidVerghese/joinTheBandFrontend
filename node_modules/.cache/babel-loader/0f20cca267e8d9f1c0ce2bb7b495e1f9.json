{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/joeverghese/2023/joinTheBand/joinTheBand/jointheband/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { config } from \"./services\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Route } from \"react-router-dom\";\nimport Home from \"./components/Home.jsx\";\nimport AllProfiles from \"./components/AllProfiles.jsx\";\nimport violinsound from \"./sounds/violinsound.mp3\";\nimport basssound from \"./sounds/basssoundone.mp3\";\nimport drumsound from \"./sounds/drumsound.mp3\";\nimport Landing from './components/Landing';\n\nfunction App() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [data, setData] = useState([]);\n  let results = 0; // we will we use findMusician and searchResult to \n  // store profiles that match the user's search later on\n\n  let findMusician = [];\n  let findMusician2 = [];\n  let findMusician3 = []; // state variables\n\n  const [searchResult1, setSearchResult1] = useState([]);\n  const [searchResult2, setSearchResult2] = useState([]);\n  const [searchResult3, setSearchResult3] = useState([]);\n  const [searchValue, setSearchValue] = useState([]);\n  const [warningMessage, setWarningMessage] = useState('');\n  const [numberOfResults, setNumberOfResults] = useState(0);\n  console.log(process.env.NODE_ENV);\n  const baseURL = process.env.NODE_ENV === 'production' ? `https://join-the-band-api.herokuapp.com/` : `http://localhost:3000`;\n  useEffect(() => {\n    fetch(`${baseURL}/users/`).then(response => response.json()).then(data => {\n      setUsers(data);\n    });\n  }, []); // document.cookie('e',100000)\n\n  const search = e => {\n    // sets the state variable 'searchValue' equal to the user's \n    // input\n    setSearchValue(e.target.value);\n  }; // the search function \n\n\n  const searchSubmit = e => {\n    // if you press enter more than once, you get a number\n    // instead of a string. I used this to create a warning message.\n    if (typeof searchValue === 'number') {\n      // e.preventDefault();\n      results = 0;\n      setWarningMessage(\"* type something new!\");\n    } else {\n      setWarningMessage(\"\");\n    }\n\n    if (searchValue.length > 0) {\n      // if there are multiple words in the user's seach, \n      // eg 'Guitar NYC', searchValueIndividualWords splits \n      // them into multiple words, and compares each one \n      // to the data stored in each fields of each profile in \n      // Airtable. It also increases the variable 'results' by \n      // one each time a match is found. 'results' is then \n      // passed as a prop (numberOfResults) to <NoResults/>. \n      // If the 'props.numberOfResults' is zero, \n      // then <NoResults/> renders a \"No results found\" message \n      // on the page. 'results' is also passed as a prop to \n      // <SearchResults'. If props.numberOfResults' is equal \n      //to zero then <SearchResults/> returns an empty div.\n      let searchValueIndividualWords = searchValue.split(\" \");\n      let doesItInclude = data.filter(item2 => {\n        // if a field in Airtable is empty, you get an error \n        // I fixed this with the following if statement.\n        if (item2.fields.Instrument !== undefined) {\n          // This checks if the first word in the user's search matches any of the \n          // genres listed in the profiles in Airtable\n          if (item2.fields.Genre.includes(searchValueIndividualWords[0])) {\n            findMusician = data.filter(item => item.fields.Genre === searchValueIndividualWords[0]); // results += 1;\n\n            if (findMusician.length !== 0) {\n              results += 1;\n            }\n\n            ;\n          } // This checks if the second word in the user's search matches \n          // any of the genres listed in the profiles in Airtable\n\n\n          if (item2.fields.Genre.includes(searchValueIndividualWords[1])) {\n            findMusician2 = data.filter(item => item.fields.Genre === searchValueIndividualWords[1]); // results += 1;\n\n            if (findMusician2.length !== 0) {\n              results += 1;\n            }\n\n            ;\n          } // This checks if the third word in the user's search matches \n          // any of the genres listed in the profiles in Airtable\n\n\n          if (item2.fields.Genre.includes(searchValueIndividualWords[2])) {\n            findMusician3 = data.filter(item => item.fields.Genre === searchValueIndividualWords[2]); // results += 1;\n\n            if (findMusician3.length !== 0) {\n              results += 1;\n            }\n\n            ;\n          } // This checks if any of the words in the user's search \n          // match any of the names of the instruments listed \n          // in the profiles in Airtable\n\n\n          if (item2.fields.Instrument.includes(searchValueIndividualWords[0])) {\n            findMusician = data.filter(item => item.fields.Instrument === searchValueIndividualWords[0]); // results += 1;\n\n            if (findMusician.length !== 0) {\n              results += 1;\n            }\n\n            ;\n          }\n\n          if (item2.fields.Instrument.includes(searchValueIndividualWords[1])) {\n            findMusician2 = data.filter(item => item.fields.Instrument === searchValueIndividualWords[1]); // results += 1;\n\n            if (findMusician2.length !== 0) {\n              results += 1;\n            }\n\n            ;\n          }\n\n          if (item2.fields.Instrument.includes(searchValueIndividualWords[2])) {\n            findMusician3 = data.filter(item => item.fields.Instrument === searchValueIndividualWords[2]); // results += 1;\n\n            if (findMusician3.length !== 0) {\n              results += 1;\n            }\n\n            ;\n          } // This checks if any of the words in the user's search \n          // match any of the names of the locations listed \n          // in the profiles in Airtable\n\n\n          if (item2.fields.Location.includes(searchValueIndividualWords[0])) {\n            findMusician = data.filter(item => item.fields.Location === searchValueIndividualWords[0]); // results += 1;\n\n            if (findMusician.length !== 0) {\n              results += 1;\n            }\n\n            ;\n          }\n\n          ;\n\n          if (item2.fields.Location.includes(searchValueIndividualWords[1])) {\n            findMusician2 = data.filter(item => item.fields.Location === searchValueIndividualWords[1]); // results += 1;\n\n            if (findMusician2.length !== 0) {\n              results += 1;\n            }\n\n            ;\n          }\n\n          if (item2.fields.Location.includes(searchValueIndividualWords[2])) {\n            findMusician3 = data.filter(item => item.fields.Location === searchValueIndividualWords[2]); // results += 1;\n\n            if (findMusician3.length !== 0) {\n              results += 1;\n            }\n\n            ;\n          } // This checks if any of the words in the user's search \n          // match what the musicians listed in Airtable said they \n          // were looking for \n\n\n          if (item2.fields.Looking_for.includes(searchValueIndividualWords[0])) {\n            findMusician = data.filter(item => item.fields.Looking_for === searchValueIndividualWords[0]); // results += 1;\n\n            if (findMusician.length !== 0) {\n              results += 1;\n            }\n\n            ;\n          }\n\n          if (item2.fields.Looking_for.includes(searchValueIndividualWords[1])) {\n            findMusician2 = data.filter(item => item.fields.Looking_for === searchValueIndividualWords[1]); // results += 1;\n\n            if (findMusician2.length !== 0) {\n              results += 1;\n            }\n\n            ;\n          }\n\n          if (item2.fields.Looking_for.includes(searchValueIndividualWords[2])) {\n            findMusician3 = data.filter(item => item.fields.Looking_for === searchValueIndividualWords[2]); // results += 1;\n\n            if (findMusician3.length !== 0) {\n              results += 1;\n            }\n\n            ;\n          } // This checks if any of the words in the user's search \n          // match any of the names listed in the profiles in Airtable\n\n\n          if (item2.fields.Musician.includes(searchValueIndividualWords[0])) {\n            findMusician = data.filter(item => item.fields.Musician === searchValueIndividualWords[0]); // results += 1;\n\n            if (findMusician.length !== 0) {\n              results += 1;\n            }\n\n            ;\n          }\n\n          if (item2.fields.Musician.includes(searchValueIndividualWords[1])) {\n            findMusician2 = data.filter(item => item.fields.Musician === searchValueIndividualWords[1]); // results += 1;\n\n            if (findMusician2.length !== 0) {\n              results += 1;\n            }\n\n            ;\n          }\n\n          if (item2.fields.Musician.includes(searchValueIndividualWords[2])) {\n            findMusician3 = data.filter(item => item.fields.Musician === searchValueIndividualWords[2]); // results += 1;\n\n            if (findMusician3.length !== 0) {\n              results += 1;\n            }\n\n            ;\n          }\n        }\n      });\n    } // we update the values of 'searchResult1', 'searchResult2', \n    // and 'searchResult3' to hold the profiles that contain\n    // information that matches the words in the user's search\n    // I might've been able to use 'setSearchResults1' inside of \n    // 'doesitInclude' above.\n\n\n    setSearchResult1(findMusician);\n    setSearchResult2(findMusician2);\n    setSearchResult3(findMusician3);\n    setSearchValue(results);\n    setNumberOfResults(results); // if there are no matches, we hear the 'ba dum tss' drum sound\n    // if there are matches, we hear the violin sound.\n\n    if (results > 0) {} else {}\n  };\n\n  const [genres, setGenres] = useState([]);\n  useEffect(() => {\n    fetch(`${baseURL}/genres`).then(response => response.json()).then(data => {\n      setGenres(data);\n    });\n  }, []);\n  const [instruments, setInstruments] = useState([]);\n  const [locations, setLocations] = useState([]);\n  useEffect(() => {\n    fetch(`${baseURL}/instruments`).then(response => response.json()).then(data => {\n      setInstruments(data);\n    });\n  }, []);\n  useEffect(() => {\n    fetch(`${baseURL}/locations`).then(response => response.json()).then(data => {\n      setLocations(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Landing, {\n          baseURL: baseURL,\n          instruments: instruments,\n          setInstruments: setInstruments,\n          locations: locations,\n          setLocations: setLocations,\n          genres: genres,\n          setGenres: setGenres,\n          users: users,\n          setUsers: setUsers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profiles\",\n        children: /*#__PURE__*/_jsxDEV(AllProfiles, {\n          baseURL: baseURL,\n          genres: genres,\n          instruments: instruments,\n          locations: locations,\n          users: users,\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/w7tlW9dlrU+txhzAiJBsF4exLo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/joeverghese/2023/joinTheBand/joinTheBand/jointheband/src/App.js"],"names":["config","useEffect","useState","axios","Route","Home","AllProfiles","violinsound","basssound","drumsound","Landing","App","users","setUsers","data","setData","results","findMusician","findMusician2","findMusician3","searchResult1","setSearchResult1","searchResult2","setSearchResult2","searchResult3","setSearchResult3","searchValue","setSearchValue","warningMessage","setWarningMessage","numberOfResults","setNumberOfResults","console","log","process","env","NODE_ENV","baseURL","fetch","then","response","json","search","e","target","value","searchSubmit","length","searchValueIndividualWords","split","doesItInclude","filter","item2","fields","Instrument","undefined","Genre","includes","item","Location","Looking_for","Musician","genres","setGenres","instruments","setInstruments","locations","setLocations"],"mappings":"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","sourcesContent":["import './App.css';\nimport { config } from \"./services\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\"\nimport { Route } from \"react-router-dom\";\nimport Home from \"./components/Home.jsx\"\nimport AllProfiles from \"./components/AllProfiles.jsx\"\nimport violinsound from \"./sounds/violinsound.mp3\"\nimport basssound from \"./sounds/basssoundone.mp3\"\nimport drumsound from \"./sounds/drumsound.mp3\";\nimport Landing from './components/Landing';\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [data, setData] = useState([])\n  let results = 0;\n  // we will we use findMusician and searchResult to \n  // store profiles that match the user's search later on\n  let findMusician = [];\n  let findMusician2 = [];\n  let findMusician3 = [];\n  // state variables\n  const [searchResult1, setSearchResult1] = useState([]);\n  const [searchResult2, setSearchResult2] = useState([]);\n  const [searchResult3, setSearchResult3] = useState([]);\n  const [searchValue, setSearchValue] = useState([]);\n  const [warningMessage, setWarningMessage] = useState('');\n  const [numberOfResults, setNumberOfResults] = useState(0);\n \n  console.log(process.env.NODE_ENV)\n  const baseURL = process.env.NODE_ENV === 'production' ?  `https://join-the-band-api.herokuapp.com/` : `http://localhost:3000`\n\n\n  useEffect(() => {\n    fetch(`${baseURL}/users/`)\n      .then((response) => response.json())\n      .then((data) => {\n        setUsers(data);\n      });\n  }, []);\n\n\n  // document.cookie('e',100000)\n\n \n\n  const search = (e) => {\n    // sets the state variable 'searchValue' equal to the user's \n    // input\n      setSearchValue(e.target.value)\n  };\n\n  // the search function \n\n  const searchSubmit = (e) => {\n    // if you press enter more than once, you get a number\n    // instead of a string. I used this to create a warning message.\n    if (typeof searchValue === 'number') {\n      // e.preventDefault();\n      results = 0;\n      setWarningMessage(\"* type something new!\")\n    }\n    else {\n      setWarningMessage(\"\")\n    }\n    if (searchValue.length > 0) {\n      // if there are multiple words in the user's seach, \n      // eg 'Guitar NYC', searchValueIndividualWords splits \n      // them into multiple words, and compares each one \n      // to the data stored in each fields of each profile in \n      // Airtable. It also increases the variable 'results' by \n      // one each time a match is found. 'results' is then \n      // passed as a prop (numberOfResults) to <NoResults/>. \n      // If the 'props.numberOfResults' is zero, \n      // then <NoResults/> renders a \"No results found\" message \n      // on the page. 'results' is also passed as a prop to \n      // <SearchResults'. If props.numberOfResults' is equal \n      //to zero then <SearchResults/> returns an empty div.\n      let searchValueIndividualWords = searchValue.split(\" \")\n      let doesItInclude = data.filter(\n        (item2) => {\n          // if a field in Airtable is empty, you get an error \n          // I fixed this with the following if statement.\n          if (item2.fields.Instrument !== undefined) {\n            // This checks if the first word in the user's search matches any of the \n            // genres listed in the profiles in Airtable\n            if (item2.fields.Genre.includes(searchValueIndividualWords[0])) {\n              findMusician = data.filter(\n                (item) => item.fields.Genre === searchValueIndividualWords[0]\n              );\n              // results += 1;\n              if (findMusician.length !== 0) {\n                results += 1;\n              };\n            }\n            // This checks if the second word in the user's search matches \n            // any of the genres listed in the profiles in Airtable\n            if (item2.fields.Genre.includes(searchValueIndividualWords[1])) {\n              findMusician2 = data.filter(\n                (item) => item.fields.Genre === searchValueIndividualWords[1]\n              );\n              // results += 1;\n              if (findMusician2.length !== 0) {\n                results += 1;\n              };\n            }\n            // This checks if the third word in the user's search matches \n            // any of the genres listed in the profiles in Airtable\n            if (item2.fields.Genre.includes(searchValueIndividualWords[2])) {\n              findMusician3 = data.filter(\n                (item) => item.fields.Genre === searchValueIndividualWords[2]\n              );\n              // results += 1;\n              if (findMusician3.length !== 0) {\n                results += 1;\n              };\n            }\n            // This checks if any of the words in the user's search \n            // match any of the names of the instruments listed \n            // in the profiles in Airtable\n            if (item2.fields.Instrument.includes(searchValueIndividualWords[0])) {\n              findMusician = data.filter(\n                (item) => item.fields.Instrument === searchValueIndividualWords[0]\n              );\n              // results += 1;\n              if (findMusician.length !== 0) {\n                results += 1;\n              };\n            }\n            if (item2.fields.Instrument.includes(searchValueIndividualWords[1])) {\n              findMusician2 = data.filter(\n                (item) => item.fields.Instrument === searchValueIndividualWords[1]\n              );\n              // results += 1;\n              if (findMusician2.length !== 0) {\n                results += 1;\n              };\n            }\n            if (item2.fields.Instrument.includes(searchValueIndividualWords[2])) {\n              findMusician3 = data.filter(\n                (item) => item.fields.Instrument === searchValueIndividualWords[2]\n              );\n              // results += 1;\n              if (findMusician3.length !== 0) {\n                results += 1;\n              };\n            }\n            // This checks if any of the words in the user's search \n            // match any of the names of the locations listed \n            // in the profiles in Airtable\n            if (item2.fields.Location.includes(searchValueIndividualWords[0])) {\n              findMusician = data.filter(\n                (item) => item.fields.Location === searchValueIndividualWords[0]\n              );\n              // results += 1;\n              if (findMusician.length !== 0) {\n                results += 1;\n              };\n            };\n            if (item2.fields.Location.includes(searchValueIndividualWords[1])) {\n              findMusician2 = data.filter(\n                (item) => item.fields.Location === searchValueIndividualWords[1]\n              );\n              // results += 1;\n              if (findMusician2.length !== 0) {\n                results += 1;\n              };\n            }\n            if (item2.fields.Location.includes(searchValueIndividualWords[2])) {\n              findMusician3 = data.filter(\n                (item) => item.fields.Location === searchValueIndividualWords[2]\n              );\n              // results += 1;\n              if (findMusician3.length !== 0) {\n                results += 1;\n              };\n            }\n            // This checks if any of the words in the user's search \n            // match what the musicians listed in Airtable said they \n            // were looking for \n            if (item2.fields.Looking_for.includes(searchValueIndividualWords[0])) {\n              findMusician = data.filter(\n                (item) => item.fields.Looking_for === searchValueIndividualWords[0]\n              );\n              // results += 1;\n              if (findMusician.length !== 0) {\n                results += 1;\n              };\n            }\n            if (item2.fields.Looking_for.includes(searchValueIndividualWords[1])) {\n              findMusician2 = data.filter(\n                (item) => item.fields.Looking_for === searchValueIndividualWords[1]\n              );\n              // results += 1;\n              if (findMusician2.length !== 0) {\n                results += 1;\n              };\n            }\n            if (item2.fields.Looking_for.includes(searchValueIndividualWords[2])) {\n              findMusician3 = data.filter(\n                (item) => item.fields.Looking_for === searchValueIndividualWords[2]\n              );\n              // results += 1;\n              if (findMusician3.length !== 0) {\n                results += 1;\n              };\n            }\n            // This checks if any of the words in the user's search \n            // match any of the names listed in the profiles in Airtable\n            if (item2.fields.Musician.includes(searchValueIndividualWords[0])) {\n              findMusician = data.filter(\n                (item) => item.fields.Musician === searchValueIndividualWords[0]\n              );\n              // results += 1;\n              if (findMusician.length !== 0) {\n                results += 1;\n              };\n            }\n            if (item2.fields.Musician.includes(searchValueIndividualWords[1])) {\n              findMusician2 = data.filter(\n                (item) => item.fields.Musician === searchValueIndividualWords[1]\n              );\n              // results += 1;\n              if (findMusician2.length !== 0) {\n                results += 1;\n              };\n            }\n            if (item2.fields.Musician.includes(searchValueIndividualWords[2])) {\n              findMusician3 = data.filter(\n                (item) => item.fields.Musician === searchValueIndividualWords[2]\n              );\n              // results += 1;\n              if (findMusician3.length !== 0) {\n                results += 1;\n              };\n              }\n            }\n          }\n        )\n    }\n    // we update the values of 'searchResult1', 'searchResult2', \n    // and 'searchResult3' to hold the profiles that contain\n    // information that matches the words in the user's search\n    // I might've been able to use 'setSearchResults1' inside of \n    // 'doesitInclude' above.\n    setSearchResult1(findMusician)\n    setSearchResult2(findMusician2)\n    setSearchResult3(findMusician3)\n    setSearchValue(results);\n    setNumberOfResults(results);\n    // if there are no matches, we hear the 'ba dum tss' drum sound\n    // if there are matches, we hear the violin sound.\n    if (results > 0) {\n      \n    }\n    else {\n    }\n  };\n\n  const [genres, setGenres] = useState([]);\n  useEffect(() => {\n    fetch(`${baseURL}/genres`)\n      .then((response) => response.json())\n      .then((data) => {\n        setGenres(data);\n      });\n  }, []);\n   \n  const [instruments, setInstruments] = useState([]);\n  const [locations, setLocations] = useState([]);\n\n  \n\n  useEffect(() => {\n    fetch(`${baseURL}/instruments`)\n      .then((response) => response.json())\n      .then((data) => {\n        setInstruments(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    fetch(`${baseURL}/locations`)\n      .then((response) => response.json())\n      .then((data) => {\n        setLocations(data);\n      });\n  }, []);\n\n  return (\n    <div>\n      <main>\n        \n        <Route exact path=\"/\">\n          <Landing baseURL={baseURL} instruments={instruments} setInstruments={setInstruments} locations={locations} setLocations={setLocations} genres={genres} setGenres={setGenres} users={users} setUsers={setUsers} />\n        </Route>\n        <Route path=\"/home\">\n          <Home/>\n        </Route>\n\n        <Route path=\"/profiles\">\n          <AllProfiles baseURL={baseURL} genres={genres} instruments={instruments} locations={locations} users={users} data={data}/>\n        </Route>\n\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}