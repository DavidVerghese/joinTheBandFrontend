{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/joeverghese/2023/joinTheBand/joinTheBand/jointheband/src/components/Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport SocialMedia from \"./SocialMedia.jsx\";\nimport { useState } from \"react\";\nimport bongo from \"../sounds/bongo.mp3\";\nimport jazzkeys from \"../sounds/jazzkeys.wav\";\nimport vibraphone from \"../sounds/vibraphone.wav\";\nimport syntharpeggio from \"../sounds/syntharpeggio.wav\";\nimport axios from \"axios\";\nimport { baseURL, config } from \"../services\";\nimport userEvent from \"@testing-library/user-event\";\n\nfunction Profile(props) {\n  _s();\n\n  let profileInfo = props.item.fields;\n  const {\n    users\n  } = props;\n  const [toEdit, setToEdit] = useState(false);\n  const [editSound, setEditSound] = useState(true);\n  const [deleteSound, setDeleteSound] = useState(true); // const [musician, setMusician] = useState(profileInfo.Musician);\n  // const [instrument, setInstrument] = useState(profileInfo.Instrument);\n  // const [location, setLocation] = useState(profileInfo.Location);\n  // const [genre, setGenre] = useState(profileInfo.Genre);\n  // const [lookingFor, setLookingFor] = useState(profileInfo.Looking_for);\n  // const [imageAddress, setImageAddress] = useState(profileInfo.Picture);\n  // const [facebookURL, setFacebookURL] = useState(profileInfo.FacebookURL);\n  // const [instagramURL, setInstagramURL] = useState(profileInfo.InstagramURL);\n  // const [soundcloudURL, setSoundcloudURL] = useState(profileInfo.SoundcloudURL);\n  // const [twitterURL, setTwitterURL] = useState(profileInfo.TwitterURL);\n\n  const edit = async e => {\n    syntharpeggioAudio.play();\n    let response = await axios.get(baseURL + `/Musicians/${props.item.id}`, config);\n    let fields = {// Musician: musician,\n      // Picture: imageAddress,\n      // Instrument: instrument,\n      // Genre: genre,\n      // Looking_for: lookingFor,\n      // Location: location,\n      // Facebook: facebookURL,\n      // Soundcloud: soundcloudURL,\n      // Twitter: twitterURL,\n      // Instagram: instagramURL\n    };\n    await axios.put(baseURL + `/Musicians/${props.item.id}`, {\n      fields\n    }, config);\n    props.refresh(prev => !prev);\n  };\n\n  const deleteFunction = async e => {\n    await axios.delete(baseURL + `/Musicians/${props.item.id}`, config);\n    props.refresh(prev => !prev);\n    console.log(\"clicked!\");\n  };\n\n  const bongoAudio = new Audio(bongo);\n  bongoAudio.volume = 0.02;\n  const jazzkeysAudio = new Audio(jazzkeys);\n  jazzkeysAudio.volume = 0.02;\n  const vibraphoneAudio = new Audio(vibraphone);\n  vibraphoneAudio.volume = 0.02;\n  const syntharpeggioAudio = new Audio(syntharpeggio);\n  syntharpeggioAudio.volume = 0.02; // the function below allows us to hide and show the social \n  // media icon. When you click the button, you set the \n  // socialMediaDisplay value, which is a boolean value to be the \n  // opposite of what it previously was. This is then passed as \n  // a prop to <SocialMedia/>. The social media icons only \n  // display when socialMediaDisplay is true, thus allowing us \n  // to display or hide them by clicking on them.\n\n  const socialMediaButton = () => {\n    setSocialMediaDisplay(!socialMediaDisplay);\n\n    if (!socialMediaDisplay) {\n      bongoAudio.play();\n    }\n  };\n\n  const [socialMediaDisplay, setSocialMediaDisplay] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profilebackground\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Profile, \"ugzZobk5WCwKsu7uG6fFw/9nM1c=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/joeverghese/2023/joinTheBand/joinTheBand/jointheband/src/components/Profile.jsx"],"names":["SocialMedia","useState","bongo","jazzkeys","vibraphone","syntharpeggio","axios","baseURL","config","userEvent","Profile","props","profileInfo","item","fields","users","toEdit","setToEdit","editSound","setEditSound","deleteSound","setDeleteSound","edit","e","syntharpeggioAudio","play","response","get","id","put","refresh","prev","deleteFunction","delete","console","log","bongoAudio","Audio","volume","jazzkeysAudio","vibraphoneAudio","socialMediaButton","setSocialMediaDisplay","socialMediaDisplay"],"mappings":";;;;;AAAA,OAAOA,WAAP,MAAwB,mBAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,aAAhC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACtB,MAAIC,WAAW,GAAGD,KAAK,CAACE,IAAN,CAAWC,MAA7B;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAYJ,KAAlB;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,IAAD,CAA9C,CANsB,CAQtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMqB,IAAI,GAAG,MAAOC,CAAP,IAAa;AACxBC,IAAAA,kBAAkB,CAACC,IAAnB;AACA,QAAIC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAAUpB,OAAO,GAAI,cAAaI,KAAK,CAACE,IAAN,CAAWe,EAAG,EAAhD,EAAmDpB,MAAnD,CAArB;AACA,QAAIM,MAAM,GAAG,CACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVW,KAAb;AAaA,UAAMR,KAAK,CAACuB,GAAN,CAAUtB,OAAO,GAAI,cAAaI,KAAK,CAACE,IAAN,CAAWe,EAAG,EAAhD,EAAmD;AAAEd,MAAAA;AAAF,KAAnD,EAA+DN,MAA/D,CAAN;AAEAG,IAAAA,KAAK,CAACmB,OAAN,CAAeC,IAAD,IAAU,CAACA,IAAzB;AACD,GAnBD;;AAqBA,QAAMC,cAAc,GAAG,MAAOT,CAAP,IAAa;AAClC,UAAMjB,KAAK,CAAC2B,MAAN,CAAa1B,OAAO,GAAI,cAAaI,KAAK,CAACE,IAAN,CAAWe,EAAG,EAAnD,EAAsDpB,MAAtD,CAAN;AACAG,IAAAA,KAAK,CAACmB,OAAN,CAAeC,IAAD,IAAU,CAACA,IAAzB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,GAJD;;AAKA,QAAMC,UAAU,GAAG,IAAIC,KAAJ,CAAUnC,KAAV,CAAnB;AACAkC,EAAAA,UAAU,CAACE,MAAX,GAAoB,IAApB;AAEA,QAAMC,aAAa,GAAG,IAAIF,KAAJ,CAAUlC,QAAV,CAAtB;AACAoC,EAAAA,aAAa,CAACD,MAAd,GAAuB,IAAvB;AACA,QAAME,eAAe,GAAG,IAAIH,KAAJ,CAAUjC,UAAV,CAAxB;AACAoC,EAAAA,eAAe,CAACF,MAAhB,GAAyB,IAAzB;AACA,QAAMd,kBAAkB,GAAG,IAAIa,KAAJ,CAAUhC,aAAV,CAA3B;AACAmB,EAAAA,kBAAkB,CAACc,MAAnB,GAA4B,IAA5B,CArDsB,CAsDtB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMG,iBAAiB,GAAG,MAAM;AAC9BC,IAAAA,qBAAqB,CAAC,CAACC,kBAAF,CAArB;;AACA,QAAI,CAACA,kBAAL,EAAyB;AACvBP,MAAAA,UAAU,CAACX,IAAX;AACD;AACF,GALD;;AAMA,QAAM,CAACkB,kBAAD,EAAqBD,qBAArB,IAA8CzC,QAAQ,CAAC,KAAD,CAA5D;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsED;;GA3IQS,O;;KAAAA,O;AA6IT,eAAeA,OAAf","sourcesContent":["import SocialMedia from \"./SocialMedia.jsx\";\nimport { useState } from \"react\";\nimport bongo from \"../sounds/bongo.mp3\";\nimport jazzkeys from \"../sounds/jazzkeys.wav\";\nimport vibraphone from \"../sounds/vibraphone.wav\";\nimport syntharpeggio from \"../sounds/syntharpeggio.wav\";\nimport axios from \"axios\";\nimport { baseURL, config } from \"../services\";\nimport userEvent from \"@testing-library/user-event\";\n\nfunction Profile(props) {\n  let profileInfo = props.item.fields\n\n  const { users } = props;\n  const [toEdit, setToEdit] = useState(false);\n  const [editSound, setEditSound] = useState(true);\n  const [deleteSound, setDeleteSound] = useState(true);\n\n  // const [musician, setMusician] = useState(profileInfo.Musician);\n  // const [instrument, setInstrument] = useState(profileInfo.Instrument);\n  // const [location, setLocation] = useState(profileInfo.Location);\n  // const [genre, setGenre] = useState(profileInfo.Genre);\n  // const [lookingFor, setLookingFor] = useState(profileInfo.Looking_for);\n  // const [imageAddress, setImageAddress] = useState(profileInfo.Picture);\n  // const [facebookURL, setFacebookURL] = useState(profileInfo.FacebookURL);\n  // const [instagramURL, setInstagramURL] = useState(profileInfo.InstagramURL);\n  // const [soundcloudURL, setSoundcloudURL] = useState(profileInfo.SoundcloudURL);\n  // const [twitterURL, setTwitterURL] = useState(profileInfo.TwitterURL);\n\n  const edit = async (e) => {\n    syntharpeggioAudio.play();\n    let response = await axios.get(baseURL + `/Musicians/${props.item.id}`, config);\n    let fields = {\n      // Musician: musician,\n      // Picture: imageAddress,\n      // Instrument: instrument,\n      // Genre: genre,\n      // Looking_for: lookingFor,\n      // Location: location,\n      // Facebook: facebookURL,\n      // Soundcloud: soundcloudURL,\n      // Twitter: twitterURL,\n      // Instagram: instagramURL\n    };\n\n    await axios.put(baseURL + `/Musicians/${props.item.id}`, { fields }, config);\n    \n    props.refresh((prev) => !prev);\n  };\n\n  const deleteFunction = async (e) => {\n    await axios.delete(baseURL + `/Musicians/${props.item.id}`, config);\n    props.refresh((prev) => !prev);\n    console.log(\"clicked!\");\n  }\n  const bongoAudio = new Audio(bongo);\n  bongoAudio.volume = 0.02;\n\n  const jazzkeysAudio = new Audio(jazzkeys);\n  jazzkeysAudio.volume = 0.02;\n  const vibraphoneAudio = new Audio(vibraphone);\n  vibraphoneAudio.volume = 0.02;\n  const syntharpeggioAudio = new Audio(syntharpeggio);\n  syntharpeggioAudio.volume = 0.02;\n  // the function below allows us to hide and show the social \n  // media icon. When you click the button, you set the \n  // socialMediaDisplay value, which is a boolean value to be the \n  // opposite of what it previously was. This is then passed as \n  // a prop to <SocialMedia/>. The social media icons only \n  // display when socialMediaDisplay is true, thus allowing us \n  // to display or hide them by clicking on them.\n  const socialMediaButton = () => {\n    setSocialMediaDisplay(!socialMediaDisplay);\n    if (!socialMediaDisplay) {\n      bongoAudio.play();\n    }\n  };\n  const [socialMediaDisplay, setSocialMediaDisplay] = useState(false);\n\n  return (\n    <div className=\"profile\">\n      <div className=\"profilebackground\">\n        {/* <h2>{users.name}</h2> */}\n        {/* <h2>{props.item.fields.Musician}</h2> */}\n        {/* <img alt=\"the musician\" src={props.item.fields.Picture}></img>\n        <p>Instrument: {props.item.fields.Instrument}</p>\n        <p>Genre: {props.item.fields.Genre}</p>\n        <p>Looking for: {props.item.fields.Looking_for}</p>\n        <p>Location: {props.item.fields.Location}</p>\n        <div id=\"socialMediaButtons\">\n          <button onClick={function (e) { e.preventDefault(); setToEdit(!toEdit); setEditSound(!editSound); if(editSound){jazzkeysAudio.play()}  }}>Edit</button>\n          <button onClick={function (e) { e.preventDefault(); deleteFunction(); setDeleteSound(!deleteSound); if (deleteSound) { vibraphoneAudio.play() }}}>Delete</button>\n        <button onClick={socialMediaButton}>Social Media</button>\n        </div> */}\n        \n        {/* <div>\n          <div className={toEdit ? \"edit-section\" : \"edit-section-hide\"}>\n          <div>\n          <label htmlFor=\"name\">Name: </label>\n          <input\n            name=\"name\"\n            type=\"text\"\n            value={musician}\n            onChange={(e) => setMusician(e.target.value)}\n          />\n          <label htmlFor=\"pictureURL\">Picture URL: </label>\n          <input\n            name=\"pictureURL\"\n            value={imageAddress}\n            type=\"text\"\n            onChange={(e) => setImageAddress(e.target.value)}\n          />\n          <label htmlFor=\"instrument\">Instrument: </label>\n          <input\n            name=\"instrument\"\n            value={instrument}\n            type=\"text\"\n            onChange={(e) => setInstrument(e.target.value)}\n          />\n          <label htmlFor=\"genre\">Genre: </label>\n          <input\n            name=\"genre\"\n            value={genre}\n            type=\"text\"\n            onChange={(e) => setGenre(e.target.value)}\n          />\n          <label htmlFor=\"name\">Looking for: </label>\n          <input\n            name=\"looking for\"\n            value={lookingFor}\n            type=\"text\"\n            onChange={(e) => setLookingFor(e.target.value)}\n          />\n          <label htmlFor=\"location\">Location: </label>\n          <input\n            name=\"location\"\n            value={location}\n            type=\"text\"\n            onChange={(e) => setLocation(e.target.value)}\n          />\n           </div>\n          <button onClick={edit}>Submit</button>\n          </div>\n        </div>\n        <SocialMedia item={props.item} todisplay={socialMediaDisplay} />\n        <br></br> */}\n      </div>\n    </div>\n  );\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}