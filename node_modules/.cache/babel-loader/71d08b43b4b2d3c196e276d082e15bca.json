{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/joeverghese/2023/joinTheBand/joinTheBand/jointheband/src/components/AllProfiles.jsx\",\n    _s = $RefreshSig$();\n\nimport Profile from \"./Profile.jsx\";\nimport drumfill from \"../sounds/drumfill.mp3\";\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport { useState, useEffect } from 'react';\n\nfunction AllProfiles({\n  users,\n  genres,\n  instruments,\n  locations\n}) {\n  _s();\n\n  const drumFillAudio = new Audio(drumfill);\n  drumFillAudio.volume = 0.02;\n  const [displayedUsers, setDisplayedUsers] = useState([]);\n  useEffect(() => {\n    setDisplayedUsers(users);\n  }, [users]);\n\n  function filterUsersByGenre(genre) {\n    if (genre === 'All genres') {\n      return users;\n    } else {\n      return users.filter(user => user.genre_name === genre);\n    }\n  }\n\n  function filterUsersByInstrument(instrument) {\n    if (instrument === 'All instruments') {\n      return users;\n    } else {\n      return users.filter(user => user.instrument_name === instrument);\n    }\n  }\n\n  function filterUsersByLocation(location) {\n    if (location === 'All locations') {\n      return users;\n    } else {\n      return users.filter(user => user.location_name === location);\n    }\n  }\n\n  function alterDate(UTCString) {\n    return Date(UTCString).split(' ').slice(0, 3).join(' ');\n  }\n\n  const genresPlusAllGenres = [{\n    name: \"All genres\"\n  }, ...genres];\n  const instrumentsPlusAllInstruments = [{\n    name: \"All instruments\"\n  }, ...instruments];\n  const locationsPlusAllLocations = [{\n    name: \"All locations\"\n  }, ...locations];\n  const radios = [{\n    name: 'Display all users',\n    value: '1'\n  }, {\n    name: 'Display my matches',\n    value: '2'\n  }];\n  const [toDisplay, setToDisplay] = useState('all users');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Users:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      className: \"mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n          id: `1`,\n          type: \"radio\",\n          variant: 1 % 2 ? 'outline-success' : 'outline-danger',\n          name: \"radio\",\n          value: 'all users',\n          checked: true,\n          onChange: e => {\n            setToDisplay(e.currentTarget.value);\n            checked = true;\n          },\n          children: \"all users\"\n        }, '1', false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          id: `2`,\n          type: \"radio\",\n          variant: 2 % 2 ? 'outline-success' : 'outline-danger',\n          name: \"radio\",\n          value: 'all users',\n          checked: false,\n          onChange: e => {\n            setToDisplay(e.currentTarget.value);\n            this.checked = true;\n          },\n          children: \"my matches\"\n        }, '2', false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          variant: \"success\",\n          id: \"dropdown-basic\",\n          children: \"Filter by Instrument\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: instrumentsPlusAllInstruments.map(instrument => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => setDisplayedUsers(filterUsersByInstrument(instrument.name)),\n            children: instrument.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 62\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          variant: \"success\",\n          id: \"dropdown-basic\",\n          children: \"Filter by Genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: genresPlusAllGenres.map(genre => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => setDisplayedUsers(filterUsersByGenre(genre.name)),\n            children: genre.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 47\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          variant: \"success\",\n          id: \"dropdown-basic\",\n          children: \"Filter by Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: locationsPlusAllLocations.map(location => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => setDisplayedUsers(filterUsersByLocation(location.name)),\n            children: location.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 56\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profiles\",\n      children: displayedUsers.map((item, key) => {\n        //  item stores data of musician's profile\n        return /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '18rem',\n            backgroundColor: 'black',\n            boxShadow: '1px 1px 1px 1px white',\n            margin: '10px',\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n                className: \"mb-2 text-muted\",\n                children: item.instrument_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n              style: {\n                width: '5rem'\n              },\n              variant: \"top\",\n              src: item.picture_url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"email: \", item.email_address]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"genre: \", item.genre_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"joined: \", alterDate(item.created_at)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"location: \", item.location_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"instrument: \", item.instrument_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"looking for: \", item.looking_for]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AllProfiles, \"B3S0St+iL/QgP4luwcPRem+UnI4=\");\n\n_c = AllProfiles;\nexport default AllProfiles;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllProfiles\");","map":{"version":3,"sources":["/Users/joeverghese/2023/joinTheBand/joinTheBand/jointheband/src/components/AllProfiles.jsx"],"names":["Profile","drumfill","Card","ListGroup","Dropdown","ToggleButton","ButtonGroup","useState","useEffect","AllProfiles","users","genres","instruments","locations","drumFillAudio","Audio","volume","displayedUsers","setDisplayedUsers","filterUsersByGenre","genre","filter","user","genre_name","filterUsersByInstrument","instrument","instrument_name","filterUsersByLocation","location","location_name","alterDate","UTCString","Date","split","slice","join","genresPlusAllGenres","name","instrumentsPlusAllInstruments","locationsPlusAllLocations","radios","value","toDisplay","setToDisplay","e","currentTarget","checked","map","item","key","width","backgroundColor","boxShadow","margin","textAlign","picture_url","email_address","created_at","looking_for"],"mappings":"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","sourcesContent":["import Profile from \"./Profile.jsx\";\nimport drumfill from \"../sounds/drumfill.mp3\";\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\n\nimport { useState, useEffect } from 'react';\nfunction AllProfiles({users,genres,instruments,locations}) {\n  const drumFillAudio = new Audio(drumfill);\n  drumFillAudio.volume = 0.02;\n\n  const [displayedUsers, setDisplayedUsers] = useState([]);\n  useEffect(() => {\n    setDisplayedUsers(users)\n  },[users])\n  function filterUsersByGenre(genre) {\n\n    if (genre === 'All genres') {\n      return users;\n    }\n    else {\n      return users.filter((user) => user.genre_name === genre);\n    }\n  }\n  function filterUsersByInstrument(instrument) {\n\n    if (instrument === 'All instruments') {\n      return users;\n    }\n    else {\n      return users.filter((user) => user.instrument_name === instrument);\n    }\n  }\n  function filterUsersByLocation(location) {\n\n    if (location === 'All locations') {\n      return users;\n    }\n    else {\n      return users.filter((user) => user.location_name === location);\n    }\n  }\n  function alterDate(UTCString) {\n    return Date(UTCString).split(' ').slice(0,3).join(' ')\n  }\n  const genresPlusAllGenres = [{ name: \"All genres\" }, ...genres]\n  const instrumentsPlusAllInstruments = [{ name: \"All instruments\" }, ...instruments]\n  const locationsPlusAllLocations = [{ name: \"All locations\" }, ...locations]\n  \n  const radios = [\n    { name: 'Display all users', value: '1' },\n    { name: 'Display my matches', value: '2' }\n  ];\n\n  const [toDisplay,setToDisplay] = useState('all users')\n\n  return (\n    <div>\n        <h2>Users:</h2>\n\n      <ButtonGroup className=\"mb-2\">\n        \n        \n      <ButtonGroup>\n   \n          <ToggleButton\n            key={'1'}\n            id={`1`}\n            type=\"radio\"\n            variant={1 % 2 ? 'outline-success' : 'outline-danger'}\n            name=\"radio\"\n            value={'all users'}\n            checked={true}\n            onChange={(e) => { setToDisplay(e.currentTarget.value); checked = true }}\n          >\n            all users\n          </ToggleButton>\n          <ToggleButton\n            key={'2'}\n            id={`2`}\n            type=\"radio\"\n            variant={2 % 2 ? 'outline-success' : 'outline-danger'}\n            name=\"radio\"\n            value={'all users'}\n            checked={false}\n            onChange={(e) => { setToDisplay(e.currentTarget.value);this.checked = true }}\n          >\n            my matches\n          </ToggleButton>\n   \n      </ButtonGroup>\n        \n        <Dropdown>\n      <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n        Filter by Instrument\n      </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          {instrumentsPlusAllInstruments.map((instrument) => <Dropdown.Item onClick={()=>setDisplayedUsers(filterUsersByInstrument(instrument.name))}>{instrument.name}</Dropdown.Item>)}\n      </Dropdown.Menu>\n      </Dropdown>\n\n        <Dropdown>\n      <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n        Filter by Genre\n      </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          {genresPlusAllGenres.map((genre) => <Dropdown.Item onClick={()=>setDisplayedUsers(filterUsersByGenre(genre.name))}>{genre.name}</Dropdown.Item>)}\n      </Dropdown.Menu>\n      </Dropdown>\n\n      <Dropdown>\n      <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n        Filter by Location\n      </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          {locationsPlusAllLocations.map((location) => <Dropdown.Item onClick={()=>setDisplayedUsers(filterUsersByLocation(location.name))}>{location.name}</Dropdown.Item>)}\n      </Dropdown.Menu>\n        </Dropdown>\n        </ButtonGroup>\n      \n    <div className=\"profiles\">\n      \n        {displayedUsers.map((item, key) => {\n        \n        //  item stores data of musician's profile\n          return (\n          \n            <Card style={{ width: '18rem', backgroundColor: 'black',boxShadow: '1px 1px 1px 1px white', margin: '10px', textAlign: 'center' }}>\n            <Card.Body>\n                 <Card.Header>\n                  <Card.Title>{item.name}</Card.Title>\n                  <Card.Subtitle className=\"mb-2 text-muted\">{item.instrument_name}</Card.Subtitle>\n                </Card.Header>\n\n                <Card.Img style={{ width: '5rem'}} variant=\"top\" src={item.picture_url}  />\n\n               \n                \n                <Card.Text>\n                  email: {item.email_address}\n                </Card.Text>\n                <Card.Text>\n                genre: {item.genre_name}\n                </Card.Text>\n                <Card.Text>\n                <p>joined: {alterDate(item.created_at)}</p>\n                </Card.Text>\n                <Card.Text>\n                <p>location: {item.location_name}</p>\n                </Card.Text>\n                <Card.Text>\n                <p>instrument: {item.instrument_name}</p>\n                </Card.Text>\n                <Card.Text>\n                <p>looking for: {item.looking_for}</p>\n                </Card.Text>\n           \n            </Card.Body>\n            </Card>\n        );\n        })}\n  \n      {/* <a href=\"#top\">\n        <button\n          onClick={function () {\n            drumFillAudio.play();\n          }}\n        >\n          Back to Top\n        </button>\n      </a> */}\n      </div>\n      </div>\n  );\n}\n\nexport default AllProfiles;\n"]},"metadata":{},"sourceType":"module"}